

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu Jul 18 14:15:37 2019

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.40
    13                           ; Generated 01/12/2016 GMT
    14                           ; 
    15                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  000B                     _INTCONbits	set	11
   107  0008                     _PORTD	set	8
   108  0008                     _PORTDbits	set	8
   109  0001                     _TMR0	set	1
   110  0081                     _OPTION_REGbits	set	129
   111  0088                     _TRISD	set	136
   112                           
   113                           ; #config settings
   114  0000                     
   115                           	psect	cinit
   116  0015                     start_initialization:	
   117  0015                     __initialization:	
   118                           
   119                           ; Clear objects allocated to COMMON
   120  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   121  0016                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  0016                     __end_of__initialization:	
   125  0016  0183               	clrf	3
   126  0017  120A  118A  283F   	ljmp	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMMON
   129  0075                     __pbssCOMMON:	
   130  0075                     _i:	
   131  0075                     	ds	1
   132                           
   133                           	psect	cstackCOMMON
   134  0070                     __pcstackCOMMON:	
   135  0070                     ?_timer:	
   136  0070                     ??_timer:	
   137                           ; 1 bytes @ 0x0
   138                           
   139  0070                     ?_main:	
   140                           ; 1 bytes @ 0x0
   141                           
   142                           
   143                           ; 1 bytes @ 0x0
   144  0070                     	ds	5
   145  0075                     ??_main:	
   146                           
   147                           	psect	maintext
   148  003F                     __pmaintext:	
   149                           ; 1 bytes @ 0x5
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 30 in file "timer0.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2
   164 ;; Tracked objects:
   165 ;;		On entry : B00/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   169 ;;      Params:         0       0       0       0       0
   170 ;;      Locals:         0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0
   172 ;;      Totals:         0       0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels required when called:    1
   175 ;; This function calls:
   176 ;;		Nothing
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           
   183                           ;psect for function _main
   184  003F                     _main:	
   185                           
   186                           ;timer0.c: 31: OPTION_REGbits.T0CS = 0;
   187                           
   188                           ;incstack = 0
   189                           ; Regs used in _main: [wreg+status,2]
   190  003F  1683               	bsf	3,5	;RP0=1, select bank1
   191  0040  1303               	bcf	3,6	;RP1=0, select bank1
   192  0041  1281               	bcf	1,5	;volatile
   193                           
   194                           ;timer0.c: 32: OPTION_REGbits.PSA = 0;
   195  0042  1181               	bcf	1,3	;volatile
   196                           
   197                           ;timer0.c: 33: OPTION_REGbits.PS0 = 1;
   198  0043  1401               	bsf	1,0	;volatile
   199                           
   200                           ;timer0.c: 34: OPTION_REGbits.PS1 = 1;
   201  0044  1481               	bsf	1,1	;volatile
   202                           
   203                           ;timer0.c: 35: OPTION_REGbits.PS2 = 1;
   204  0045  1501               	bsf	1,2	;volatile
   205                           
   206                           ;timer0.c: 36: TMR0 = 60;
   207  0046  303C               	movlw	60
   208  0047  1283               	bcf	3,5	;RP0=0, select bank0
   209  0048  1303               	bcf	3,6	;RP1=0, select bank0
   210  0049  0081               	movwf	1	;volatile
   211                           
   212                           ;timer0.c: 37: INTCONbits.T0IE = 1;
   213  004A  168B               	bsf	11,5	;volatile
   214                           
   215                           ;timer0.c: 38: INTCONbits.GIE = 1;
   216  004B  178B               	bsf	11,7	;volatile
   217                           
   218                           ;timer0.c: 39: TRISD = 0x00;
   219  004C  1683               	bsf	3,5	;RP0=1, select bank1
   220  004D  1303               	bcf	3,6	;RP1=0, select bank1
   221  004E  0188               	clrf	8	;volatile
   222                           
   223                           ;timer0.c: 40: PORTD = 0x00;
   224  004F  1283               	bcf	3,5	;RP0=0, select bank0
   225  0050  1303               	bcf	3,6	;RP1=0, select bank0
   226  0051  0188               	clrf	8	;volatile
   227  0052                     l22:	
   228                           ;timer0.c: 42: while(1) {
   229                           
   230  0052  2852               	goto	l22
   231  0053                     __end_of_main:	
   232                           ;timer0.c: 44: }
   233                           ;timer0.c: 45: return;
   234                           
   235                           
   236                           	psect	text1
   237  001A                     __ptext1:	
   238 ;; *************** function _timer *****************
   239 ;; Defined at:
   240 ;;		line 18 in file "timer0.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0
   256 ;;      Temps:          5       0       0       0       0
   257 ;;      Totals:         5       0       0       0       0
   258 ;;Total ram usage:        5 bytes
   259 ;; Hardware stack levels used:    1
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		Interrupt level 1
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           
   268                           ;psect for function _timer
   269  001A                     _timer:	
   270                           
   271                           ;timer0.c: 19: if(INTCONbits.T0IF) {
   272  001A  1D0B               	btfss	11,2	;volatile
   273  001B  2834               	goto	i1l19
   274                           
   275                           ;timer0.c: 20: TMR0 = 60;
   276  001C  303C               	movlw	60
   277  001D  0081               	movwf	1	;volatile
   278                           
   279                           ;timer0.c: 21: i++;
   280  001E  3001               	movlw	1
   281  001F  00F0               	movwf	??_timer
   282  0020  0870               	movf	??_timer,w
   283  0021  07F5               	addwf	_i,f
   284                           
   285                           ;timer0.c: 22: if(i == 10) {
   286  0022  300A               	movlw	10
   287  0023  0675               	xorwf	_i,w
   288  0024  1D03               	btfss	3,2
   289  0025  2833               	goto	i1l501
   290                           
   291                           ;timer0.c: 23: PORTDbits.RD0 =~ PORTDbits.RD0;
   292  0026  1003               	clrc
   293  0027  1C08               	btfss	8,0	;volatile
   294  0028  1403               	setc
   295  0029  1C03               	btfss	3,0
   296  002A  282F               	goto	u3_20
   297  002B  1283               	bcf	3,5	;RP0=0, select bank0
   298  002C  1303               	bcf	3,6	;RP1=0, select bank0
   299  002D  1408               	bsf	8,0	;volatile
   300  002E  2832               	goto	i1l499
   301  002F                     u3_20:	
   302  002F  1283               	bcf	3,5	;RP0=0, select bank0
   303  0030  1303               	bcf	3,6	;RP1=0, select bank0
   304  0031  1008               	bcf	8,0	;volatile
   305  0032                     i1l499:	
   306                           
   307                           ;timer0.c: 24: i = 0;
   308  0032  01F5               	clrf	_i
   309  0033                     i1l501:	
   310                           
   311                           ;timer0.c: 25: }
   312                           ;timer0.c: 26: INTCONbits.T0IF = 0;
   313  0033  110B               	bcf	11,2	;volatile
   314  0034                     i1l19:	
   315  0034  0874               	movf	??_timer+4,w
   316  0035  00FF               	movwf	127
   317  0036  0873               	movf	??_timer+3,w
   318  0037  008A               	movwf	10
   319  0038  0872               	movf	??_timer+2,w
   320  0039  0084               	movwf	4
   321  003A  0E71               	swapf	(??_timer+1)^(0+-128),w
   322  003B  0083               	movwf	3
   323  003C  0EFE               	swapf	126,f
   324  003D  0E7E               	swapf	126,w
   325  003E  0009               	retfie
   326  003F                     __end_of_timer:	
   327  007E                     btemp	set	126	;btemp
   328  007E                     wtemp0	set	126
   329                           
   330                           	psect	intentry
   331  0004                     __pintentry:	
   332                           ;incstack = 0
   333                           ; Regs used in _timer: [wreg+status,2+status,0]
   334                           
   335  0004                     interrupt_function:	
   336  007E                     saved_w	set	btemp
   337  0004  00FE               	movwf	btemp
   338  0005  0E03               	swapf	3,w
   339  0006  00F1               	movwf	??_timer+1
   340  0007  0804               	movf	4,w
   341  0008  00F2               	movwf	??_timer+2
   342  0009  080A               	movf	10,w
   343  000A  00F3               	movwf	??_timer+3
   344  000B  1283               	bcf	3,5	;RP0=0, select bank0
   345  000C  1303               	bcf	3,6	;RP1=0, select bank0
   346  000D  087F               	movf	btemp+1,w
   347  000E  00F4               	movwf	??_timer+4
   348  000F  120A  118A  281A   	ljmp	_timer


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer                                                5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu Jul 18 14:15:37 2019

                      _i 0075              __CFG_CP$OFF 0000                       l22 0052  
           __CFG_CPD$OFF 0000                      fsr0 0004             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     i1l19 0034                     _TMR0 0001  
                   u3_20 002F             __CFG_WRT$OFF 0000                     _main 003F  
                   btemp 007E                     start 0012                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l501 0033                    i1l499 0032  
                  _PORTD 0008                    _TRISD 0088                    _timer 001A  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 0053  
                 ??_main 0075                   ?_timer 0070           __CFG_PWRTE$OFF 0000  
                 saved_w 007E  __end_of__initialization 0016           __pcstackCOMMON 0070  
          __end_of_timer 003F           _OPTION_REGbits 0081                  ??_timer 0070  
             __pmaintext 003F               __pintentry 0004                  __ptext1 001A  
   end_of_initialization 0016                _PORTDbits 0008      start_initialization 0015  
            __pbssCOMMON 0075                ___latbits 0002           __size_of_timer 0025  
      interrupt_function 0004            __size_of_main 0014               _INTCONbits 000B  
               intlevel1 0000  
