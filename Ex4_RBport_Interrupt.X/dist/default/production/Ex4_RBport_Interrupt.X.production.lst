

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu Jul 18 12:18:18 2019

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.40
    14                           ; Generated 01/12/2016 GMT
    15                           ; 
    16                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  000B                     _INTCONbits	set	11
   108  0006                     _PORTB	set	6
   109  0006                     _PORTBbits	set	6
   110  0008                     _PORTD	set	8
   111  0086                     _TRISB	set	134
   112  0088                     _TRISD	set	136
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  0015                     start_initialization:	
   118  0015                     __initialization:	
   119                           
   120                           ; Clear objects allocated to BITCOMMON
   121  0015  01F5               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   122                           
   123                           ; Clear objects allocated to COMMON
   124  0016  01F6               	clrf	__pbssCOMMON& (0+127)
   125  0017                     end_of_initialization:	
   126                           ;End of C runtime variable initialization code
   127                           
   128  0017                     __end_of__initialization:	
   129  0017  0183               	clrf	3
   130  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   131                           
   132                           	psect	bitbssCOMMON
   133  03A8                     __pbitbssCOMMON:	
   134  03A8                     _b0:	
   135  03A8                     	ds	1
   136  03A9                     _b1:	
   137  03A9                     	ds	1
   138  03AA                     _b2:	
   139  03AA                     	ds	1
   140  03AB                     _b3:	
   141  03AB                     	ds	1
   142                           
   143                           	psect	bssCOMMON
   144  0076                     __pbssCOMMON:	
   145  0076                     _counter:	
   146  0076                     	ds	1
   147                           
   148                           	psect	cstackCOMMON
   149  0070                     __pcstackCOMMON:	
   150  0070                     ?_isr:	
   151  0070                     ??_isr:	
   152                           ; 1 bytes @ 0x0
   153                           
   154  0070                     ?_main:	
   155                           ; 1 bytes @ 0x0
   156                           
   157                           
   158                           ; 1 bytes @ 0x0
   159  0070                     	ds	5
   160  0075                     ??_main:	
   161                           
   162                           	psect	maintext
   163  001B                     __pmaintext:	
   164                           ; 1 bytes @ 0x5
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 30 in file "rb.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2
   179 ;; Tracked objects:
   180 ;;		On entry : B00/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   184 ;;      Params:         0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0
   187 ;;      Totals:         0       0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called:    1
   190 ;; This function calls:
   191 ;;		Nothing
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           
   198                           ;psect for function _main
   199  001B                     _main:	
   200                           
   201                           ;rb.c: 31: INTCONbits.RBIE = 1;
   202                           
   203                           ;incstack = 0
   204                           ; Regs used in _main: [wreg+status,2]
   205  001B  158B               	bsf	11,3	;volatile
   206                           
   207                           ;rb.c: 32: INTCONbits.GIE = 1;
   208  001C  178B               	bsf	11,7	;volatile
   209                           
   210                           ;rb.c: 33: TRISB = 0xF0;
   211  001D  30F0               	movlw	240
   212  001E  1683               	bsf	3,5	;RP0=1, select bank1
   213  001F  1303               	bcf	3,6	;RP1=0, select bank1
   214  0020  0086               	movwf	6	;volatile
   215                           
   216                           ;rb.c: 34: PORTB = 0x00;
   217  0021  1283               	bcf	3,5	;RP0=0, select bank0
   218  0022  1303               	bcf	3,6	;RP1=0, select bank0
   219  0023  0186               	clrf	6	;volatile
   220                           
   221                           ;rb.c: 35: TRISD = 0x00;
   222  0024  1683               	bsf	3,5	;RP0=1, select bank1
   223  0025  1303               	bcf	3,6	;RP1=0, select bank1
   224  0026  0188               	clrf	8	;volatile
   225                           
   226                           ;rb.c: 36: PORTD = 0x00;
   227  0027  1283               	bcf	3,5	;RP0=0, select bank0
   228  0028  1303               	bcf	3,6	;RP1=0, select bank0
   229  0029  0188               	clrf	8	;volatile
   230  002A                     l514:	
   231                           ;rb.c: 38: while(1) {
   232                           
   233                           
   234                           ;rb.c: 43: PORTBbits.RB0 = b0;
   235  002A  1C75               	btfss	_b0/(0+8),_b0& (0+7)
   236  002B  2830               	goto	u60
   237  002C  1283               	bcf	3,5	;RP0=0, select bank0
   238  002D  1303               	bcf	3,6	;RP1=0, select bank0
   239  002E  1406               	bsf	6,0	;volatile
   240  002F  2833               	goto	l516
   241  0030                     u60:	
   242  0030  1283               	bcf	3,5	;RP0=0, select bank0
   243  0031  1303               	bcf	3,6	;RP1=0, select bank0
   244  0032  1006               	bcf	6,0	;volatile
   245  0033                     l516:	
   246                           
   247                           ;rb.c: 44: PORTBbits.RB1 = b1;
   248  0033  1CF5               	btfss	_b1/(0+8),_b1& (0+7)
   249  0034  2839               	goto	u80
   250  0035  1283               	bcf	3,5	;RP0=0, select bank0
   251  0036  1303               	bcf	3,6	;RP1=0, select bank0
   252  0037  1486               	bsf	6,1	;volatile
   253  0038  283C               	goto	l518
   254  0039                     u80:	
   255  0039  1283               	bcf	3,5	;RP0=0, select bank0
   256  003A  1303               	bcf	3,6	;RP1=0, select bank0
   257  003B  1086               	bcf	6,1	;volatile
   258  003C                     l518:	
   259                           
   260                           ;rb.c: 45: PORTBbits.RB2 = b2;
   261  003C  1D75               	btfss	_b2/(0+8),_b2& (0+7)
   262  003D  2842               	goto	u100
   263  003E  1283               	bcf	3,5	;RP0=0, select bank0
   264  003F  1303               	bcf	3,6	;RP1=0, select bank0
   265  0040  1506               	bsf	6,2	;volatile
   266  0041  2845               	goto	l520
   267  0042                     u100:	
   268  0042  1283               	bcf	3,5	;RP0=0, select bank0
   269  0043  1303               	bcf	3,6	;RP1=0, select bank0
   270  0044  1106               	bcf	6,2	;volatile
   271  0045                     l520:	
   272                           
   273                           ;rb.c: 46: PORTBbits.RB3 = b3;
   274  0045  1DF5               	btfss	_b3/(0+8),_b3& (0+7)
   275  0046  284B               	goto	u120
   276  0047  1283               	bcf	3,5	;RP0=0, select bank0
   277  0048  1303               	bcf	3,6	;RP1=0, select bank0
   278  0049  1586               	bsf	6,3	;volatile
   279  004A  284E               	goto	l522
   280  004B                     u120:	
   281  004B  1283               	bcf	3,5	;RP0=0, select bank0
   282  004C  1303               	bcf	3,6	;RP1=0, select bank0
   283  004D  1186               	bcf	6,3	;volatile
   284  004E                     l522:	
   285                           
   286                           ;rb.c: 47: PORTD = counter;
   287  004E  0876               	movf	_counter,w
   288  004F  0088               	movwf	8	;volatile
   289  0050  282A               	goto	l514
   290  0051                     __end_of_main:	
   291                           ;rb.c: 48: }
   292                           ;rb.c: 49: return;
   293                           
   294                           
   295                           	psect	text1
   296  0051                     __ptext1:	
   297 ;; *************** function _isr *****************
   298 ;; Defined at:
   299 ;;		line 18 in file "rb.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          5       0       0       0       0
   316 ;;      Totals:         5       0       0       0       0
   317 ;;Total ram usage:        5 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		Interrupt level 1
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _isr
   328  0051                     _isr:	
   329                           
   330                           ;rb.c: 19: if(INTCONbits.RBIF) {
   331  0051  1C0B               	btfss	11,0	;volatile
   332  0052  286B               	goto	i1l26
   333                           
   334                           ;rb.c: 20: b0 = PORTBbits.RB4;
   335  0053  1075               	bcf	_b0/(0+8),_b0& (0+7)
   336  0054  1E06               	btfss	6,4	;volatile
   337  0055  2857               	goto	u2_25
   338  0056  1475               	bsf	_b0/(0+8),_b0& (0+7)
   339  0057                     u2_25:	
   340                           
   341                           ;rb.c: 21: b1 = PORTBbits.RB5;
   342  0057  10F5               	bcf	_b1/(0+8),_b1& (0+7)
   343  0058  1283               	bcf	3,5	;RP0=0, select bank0
   344  0059  1303               	bcf	3,6	;RP1=0, select bank0
   345  005A  1A86               	btfsc	6,5	;volatile
   346  005B  14F5               	bsf	_b1/(0+8),_b1& (0+7)
   347                           
   348                           ;rb.c: 22: b2 = PORTBbits.RB6;
   349  005C  1175               	bcf	_b2/(0+8),_b2& (0+7)
   350  005D  1283               	bcf	3,5	;RP0=0, select bank0
   351  005E  1303               	bcf	3,6	;RP1=0, select bank0
   352  005F  1B06               	btfsc	6,6	;volatile
   353  0060  1575               	bsf	_b2/(0+8),_b2& (0+7)
   354                           
   355                           ;rb.c: 23: b3 = PORTBbits.RB7;
   356  0061  11F5               	bcf	_b3/(0+8),_b3& (0+7)
   357  0062  1283               	bcf	3,5	;RP0=0, select bank0
   358  0063  1303               	bcf	3,6	;RP1=0, select bank0
   359  0064  1B86               	btfsc	6,7	;volatile
   360  0065  15F5               	bsf	_b3/(0+8),_b3& (0+7)
   361                           
   362                           ;rb.c: 24: counter++;
   363  0066  3001               	movlw	1
   364  0067  00F0               	movwf	??_isr
   365  0068  0870               	movf	??_isr,w
   366  0069  07F6               	addwf	_counter,f
   367                           
   368                           ;rb.c: 25: INTCONbits.RBIF = 0;
   369  006A  100B               	bcf	11,0	;volatile
   370  006B                     i1l26:	
   371  006B  0874               	movf	??_isr+4,w
   372  006C  1283               	bcf	3,5	;RP0=0, select bank0
   373  006D  1303               	bcf	3,6	;RP1=0, select bank0
   374  006E  00FF               	movwf	127
   375  006F  0873               	movf	??_isr+3,w
   376  0070  008A               	movwf	10
   377  0071  0872               	movf	??_isr+2,w
   378  0072  0084               	movwf	4
   379  0073  0E71               	swapf	(??_isr+1)^(0+-128),w
   380  0074  0083               	movwf	3
   381  0075  0EFE               	swapf	126,f
   382  0076  0E7E               	swapf	126,w
   383  0077  0009               	retfie
   384  0078                     __end_of_isr:	
   385  007E                     btemp	set	126	;btemp
   386  007E                     wtemp0	set	126
   387                           
   388                           	psect	intentry
   389  0004                     __pintentry:	
   390                           ;incstack = 0
   391                           ; Regs used in _isr: [wreg+status,2+status,0]
   392                           
   393  0004                     interrupt_function:	
   394  007E                     saved_w	set	btemp
   395  0004  00FE               	movwf	btemp
   396  0005  0E03               	swapf	3,w
   397  0006  00F1               	movwf	??_isr+1
   398  0007  0804               	movf	4,w
   399  0008  00F2               	movwf	??_isr+2
   400  0009  080A               	movf	10,w
   401  000A  00F3               	movwf	??_isr+3
   402  000B  1283               	bcf	3,5	;RP0=0, select bank0
   403  000C  1303               	bcf	3,6	;RP1=0, select bank0
   404  000D  087F               	movf	btemp+1,w
   405  000E  00F4               	movwf	??_isr+4
   406  000F  120A  118A  2851   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu Jul 18 12:18:18 2019

            __CFG_CP$OFF 0000                       u60 0030                       _b0 03A8  
                     _b1 03A9                       _b2 03AA                       _b3 03AB  
                     u80 0039                      l520 0045                      l522 004E  
                    l514 002A                      l516 0033                      l518 003C  
                    u100 0042                      u120 004B             __CFG_CPD$OFF 0000  
                    _isr 0051                      fsr0 0004             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     ?_isr 0070                     i1l26 006B  
                   u2_25 0057             __CFG_WRT$OFF 0000                     _main 001B  
                   btemp 007E                     start 0012                    ??_isr 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
         __pbitbssCOMMON 03A8           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 0051                   ??_main 0075           __CFG_PWRTE$OFF 0000  
                 saved_w 007E  __end_of__initialization 0017           __pcstackCOMMON 0070  
             __pmaintext 001B               __pintentry 0004                  __ptext1 0051  
                _counter 0076             __size_of_isr 0027     end_of_initialization 0017  
              _PORTBbits 0006      start_initialization 0015              __end_of_isr 0078  
            __pbssCOMMON 0076                ___latbits 0002        interrupt_function 0004  
          __size_of_main 0036               _INTCONbits 000B                 intlevel1 0000  
