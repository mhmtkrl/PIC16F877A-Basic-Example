

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu Jul 18 12:17:33 2019

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.40
    13                           ; Generated 01/12/2016 GMT
    14                           ; 
    15                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  000B                     _INTCONbits	set	11
   107  0006                     _PORTB	set	6
   108  0008                     _PORTD	set	8
   109  0081                     _OPTION_REGbits	set	129
   110  0086                     _TRISB	set	134
   111  0088                     _TRISD	set	136
   112                           
   113                           ; #config settings
   114  0000                     
   115                           	psect	cinit
   116  0015                     start_initialization:	
   117  0015                     __initialization:	
   118                           
   119                           ; Clear objects allocated to COMMON
   120  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   121  0016                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  0016                     __end_of__initialization:	
   125  0016  0183               	clrf	3
   126  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMMON
   129  0075                     __pbssCOMMON:	
   130  0075                     _counter:	
   131  0075                     	ds	1
   132                           
   133                           	psect	cstackCOMMON
   134  0070                     __pcstackCOMMON:	
   135  0070                     ?_isr:	
   136  0070                     ??_isr:	
   137                           ; 1 bytes @ 0x0
   138                           
   139  0070                     ?_main:	
   140                           ; 1 bytes @ 0x0
   141                           
   142                           
   143                           ; 1 bytes @ 0x0
   144  0070                     	ds	5
   145  0075                     ??_main:	
   146                           
   147                           	psect	maintext
   148  001A                     __pmaintext:	
   149                           ; 1 bytes @ 0x5
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 25 in file "rb0.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2
   164 ;; Tracked objects:
   165 ;;		On entry : B00/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   169 ;;      Params:         0       0       0       0       0
   170 ;;      Locals:         0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0
   172 ;;      Totals:         0       0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels required when called:    1
   175 ;; This function calls:
   176 ;;		Nothing
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           
   183                           ;psect for function _main
   184  001A                     _main:	
   185                           
   186                           ;rb0.c: 26: INTCONbits.INTE = 1;
   187                           
   188                           ;incstack = 0
   189                           ; Regs used in _main: [wreg+status,2]
   190  001A  160B               	bsf	11,4	;volatile
   191                           
   192                           ;rb0.c: 27: OPTION_REGbits.INTEDG = 0;
   193  001B  1683               	bsf	3,5	;RP0=1, select bank1
   194  001C  1303               	bcf	3,6	;RP1=0, select bank1
   195  001D  1301               	bcf	1,6	;volatile
   196                           
   197                           ;rb0.c: 28: INTCONbits.GIE = 1;
   198  001E  178B               	bsf	11,7	;volatile
   199                           
   200                           ;rb0.c: 29: TRISB = 0x01;
   201  001F  3001               	movlw	1
   202  0020  0086               	movwf	6	;volatile
   203                           
   204                           ;rb0.c: 30: PORTB = 0x00;
   205  0021  1283               	bcf	3,5	;RP0=0, select bank0
   206  0022  1303               	bcf	3,6	;RP1=0, select bank0
   207  0023  0186               	clrf	6	;volatile
   208                           
   209                           ;rb0.c: 31: TRISD = 0x00;
   210  0024  1683               	bsf	3,5	;RP0=1, select bank1
   211  0025  1303               	bcf	3,6	;RP1=0, select bank1
   212  0026  0188               	clrf	8	;volatile
   213                           
   214                           ;rb0.c: 32: PORTD = 0;
   215  0027  1283               	bcf	3,5	;RP0=0, select bank0
   216  0028  1303               	bcf	3,6	;RP1=0, select bank0
   217  0029  0188               	clrf	8	;volatile
   218  002A                     l501:	
   219                           ;rb0.c: 34: while(1) {
   220                           
   221                           
   222                           ;rb0.c: 35: if(counter > 15) {
   223  002A  3010               	movlw	16
   224  002B  0275               	subwf	_counter,w
   225  002C  1803               	btfsc	3,0
   226                           
   227                           ;rb0.c: 36: counter = 0;
   228  002D  01F5               	clrf	_counter
   229                           
   230                           ;rb0.c: 37: }
   231                           ;rb0.c: 38: PORTD = counter;
   232  002E  0875               	movf	_counter,w
   233  002F  0088               	movwf	8	;volatile
   234  0030  282A               	goto	l501
   235  0031                     __end_of_main:	
   236                           ;rb0.c: 39: }
   237                           ;rb0.c: 40: return;
   238                           
   239                           
   240                           	psect	text1
   241  0031                     __ptext1:	
   242 ;; *************** function _isr *****************
   243 ;; Defined at:
   244 ;;		line 18 in file "rb0.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0
   260 ;;      Temps:          5       0       0       0       0
   261 ;;      Totals:         5       0       0       0       0
   262 ;;Total ram usage:        5 bytes
   263 ;; Hardware stack levels used:    1
   264 ;; This function calls:
   265 ;;		Nothing
   266 ;; This function is called by:
   267 ;;		Interrupt level 1
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _isr
   273  0031                     _isr:	
   274                           
   275                           ;rb0.c: 19: if(INTCONbits.INTF) {
   276  0031  1C8B               	btfss	11,1	;volatile
   277  0032  2838               	goto	i1l18
   278                           
   279                           ;rb0.c: 20: counter++;
   280  0033  3001               	movlw	1
   281  0034  00F0               	movwf	??_isr
   282  0035  0870               	movf	??_isr,w
   283  0036  07F5               	addwf	_counter,f
   284                           
   285                           ;rb0.c: 21: INTCONbits.INTF = 0;
   286  0037  108B               	bcf	11,1	;volatile
   287  0038                     i1l18:	
   288  0038  0874               	movf	??_isr+4,w
   289  0039  00FF               	movwf	127
   290  003A  0873               	movf	??_isr+3,w
   291  003B  008A               	movwf	10
   292  003C  0872               	movf	??_isr+2,w
   293  003D  0084               	movwf	4
   294  003E  0E71               	swapf	(??_isr+1)^(0+-128),w
   295  003F  0083               	movwf	3
   296  0040  0EFE               	swapf	126,f
   297  0041  0E7E               	swapf	126,w
   298  0042  0009               	retfie
   299  0043                     __end_of_isr:	
   300  007E                     btemp	set	126	;btemp
   301  007E                     wtemp0	set	126
   302                           
   303                           	psect	intentry
   304  0004                     __pintentry:	
   305                           ;incstack = 0
   306                           ; Regs used in _isr: [wreg+status,2+status,0]
   307                           
   308  0004                     interrupt_function:	
   309  007E                     saved_w	set	btemp
   310  0004  00FE               	movwf	btemp
   311  0005  0E03               	swapf	3,w
   312  0006  00F1               	movwf	??_isr+1
   313  0007  0804               	movf	4,w
   314  0008  00F2               	movwf	??_isr+2
   315  0009  080A               	movf	10,w
   316  000A  00F3               	movwf	??_isr+3
   317  000B  1283               	bcf	3,5	;RP0=0, select bank0
   318  000C  1303               	bcf	3,6	;RP1=0, select bank0
   319  000D  087F               	movf	btemp+1,w
   320  000E  00F4               	movwf	??_isr+4
   321  000F  120A  118A  2831   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu Jul 18 12:17:33 2019

            __CFG_CP$OFF 0000                      l501 002A             __CFG_CPD$OFF 0000  
                    _isr 0031                      fsr0 0004             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     ?_isr 0070                     i1l18 0038  
           __CFG_WRT$OFF 0000                     _main 001A                     btemp 007E  
                   start 0012                    ??_isr 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0031                   ??_main 0075  
         __CFG_PWRTE$OFF 0000                   saved_w 007E  __end_of__initialization 0016  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 001A  
             __pintentry 0004                  __ptext1 0031                  _counter 0075  
           __size_of_isr 0012     end_of_initialization 0016      start_initialization 0015  
            __end_of_isr 0043              __pbssCOMMON 0075                ___latbits 0002  
      interrupt_function 0004            __size_of_main 0017               _INTCONbits 000B  
               intlevel1 0000  
